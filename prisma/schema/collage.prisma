model Collage {
    id             String   @id @default(cuid())
    name           String
    address        String
    registrationNo String
    approvedBy     String?
    avatar         String?
    ranking        String?
    established    String
    programs       String[]
    campusSize     String?

    bankAccount   BankAccount @relation(references: [id], fields: [bankAccountId])
    bankAccountId String      @unique

    departments            Department[]
    users                  User[]
    events                 Event[]
    salaries               Salary[]
    tutionFees             TutionFee[]
    conversations          Conversation[]
    departmentStudentStats DepartmentStudentStats[]
    departmentTeacherStats DepartmentTeacherStats[]
    graduationStats        GraduationStats[]
    satisfactionSurvey     SatisfactionSurvey[]
    placementStats         PlacementStats[]
    stuffRoleStats         StuffRoleStats[]
    revenueStats           RevenueStats[]
    collageEnrollmentStats CollageEnrollmentStats[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum DeptType {
    engineering
    medical
    law
    management
    internal
}

model Department {
    id        String   @id @default(cuid())
    type      DeptType
    collage   Collage  @relation(references: [id], fields: [collageId])
    collageId String

    degrees                Degree[]
    students               Student[]
    batches                Batch[]
    asignTeachers          AsignTeacher[]
    admissions             Admission[]
    departmentTeacherStats DepartmentTeacherStats[]
    departmentStudentStats DepartmentStudentStats[]
    graduationStats        GraduationStats[]
    placementStats         PlacementStats[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum DegreeType {
    bachelor
    master
    phd
    diploma
}

model Degree {
    id   String     @id @default(cuid())
    type DegreeType

    department   Department @relation(references: [id], fields: [departmentId])
    departmentId String

    courses                Course[]
    admissions             Admission[]
    departmentStudentStats DepartmentStudentStats[]
    graduationStats        GraduationStats[]
    placementStats         PlacementStats[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model CollageEnrollmentStats {
    id            String  @id @default(cuid())
    totalStudents Int
    totalTeacher  Int
    collage       Collage @relation(references: [id], fields: [collageId])
    collageId     String  @unique
}
