// Total Students / Student by Department
model DepartmentStudentStats {
    id       String @id @default(uuid())
    year     Int
    students Int

    department   Department @relation(fields: [departmentId], references: [id])
    departmentId String

    degree   Degree @relation(fields: [degreeId], references: [id])
    degreeId String

    Collage   Collage @relation(fields: [collageId], references: [id])
    collageId String

    @@unique([collageId, departmentId, degreeId, year])
}

// Total Teachers / Teachers by department
model DepartmentTeacherStats {
    id       String @id @default(uuid())
    year     Int
    teachers Int

    department   Department @relation(fields: [departmentId], references: [id])
    departmentId String

    Collage   Collage @relation(fields: [collageId], references: [id])
    collageId String

    @@unique([collageId, departmentId, year])
}

// Graduation Rate
model GraduationStats {
    id        String @id @default(uuid())
    year      Int
    appeared  Int
    graduated Int

    department   Department @relation(fields: [departmentId], references: [id])
    departmentId String

    degree   Degree @relation(fields: [degreeId], references: [id])
    degreeId String

    Collage   Collage @relation(fields: [collageId], references: [id])
    collageId String

    @@unique([collageId, departmentId, degreeId, year])
}

enum ReviewScore {
    one
    two
    three
    four
    five
}

// Student Satisfaction
model SatisfactionSurvey {
    id    String      @id @default(uuid())
    year  Int
    score ReviewScore

    Collage   Collage @relation(fields: [collageId], references: [id])
    collageId String
}

// Placement by Department
model PlacementStats {
    id String @id @default(uuid())

    year     Int
    placed   Int
    eligible Int

    department   Department @relation(fields: [departmentId], references: [id])
    departmentId String

    degree   Degree @relation(fields: [degreeId], references: [id])
    degreeId String

    collageId String
    Collage   Collage @relation(fields: [collageId], references: [id])

    @@unique([collageId, departmentId, degreeId, year])
}

// Roled Staff Count
model StuffRoleStats {
    id    String   @id @default(uuid())
    role  UserRole
    count Int

    Collage   Collage @relation(fields: [collageId], references: [id])
    collageId String

    @@unique([collageId, role])
}

enum SourceType {
    fees
    grants
    donations
}

// Total Revenue
model RevenueStats {
    id     String     @id @default(uuid())
    year   Int
    amount Float
    source SourceType // e.g., 'fees', 'grants', 'donations'

    Collage   Collage @relation(fields: [collageId], references: [id])
    collageId String

    @@unique([collageId, source, year])
}
